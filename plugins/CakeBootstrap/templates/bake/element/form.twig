{% set fields = Bake.filterFields(fields, schema, modelObject) %}

<div class="row">
    <div class="col-md-2">
        <nav class="columns" id="actions-sidebar">
            <h4>Actions</h4>
            <div class="list-group">
                {% if 'add' not in action %}
                    <?= $this->Form->postLink(
                        __('Delete'),
                        ['action' => 'delete', ${{ singularVar }}->{{ primaryKey[0] }}],
                        ['confirm' => __('Are you sure you want to delete # {0}?', ${{ singularVar }}->{{ primaryKey[0] }}), 'class' => 'list-group-item list-group-item-action']
                        ) ?>
                {% endif %}
                <?= $this->Html->link(__('List {{ pluralHumanName }}'), ['action' => 'index'], ['class' => 'list-group-item list-group-item-action']) ?>
                {{- "\n" }}
                {%- set done = [] %}
                {% for type, data in associations %}
                    {%- for alias, details in data %}
                        {%- if details.controller is not same as(_view.name) and details.controller not in done %}
                            <?= $this->Html->link(__('List {{ alias|underscore|humanize }}'), ['controller' => '{{ details.controller }}', 'action' => 'index'], ['class' => 'list-group-item list-group-item-action']) ?>
                            <?= $this->Html->link(__('New {{ alias|singularize|underscore|humanize }}'), ['controller' => '{{ details.controller }}', 'action' => 'add'], ['class' => 'list-group-item list-group-item-action']) ?>
                            {{- "\n" }}
                            {%- set done = done|merge([details.controller]) %}
                        {%- endif %}
                    {%- endfor %}
                {% endfor %}
            </div>
        </nav>
    </div>
    <div class="col-md-10">
        <div class="{{ pluralVar }} form columns content">
            <?= $this->Form->create(${{ singularVar }}) ?>
            <fieldset>
                <legend><?= __('{{ action|humanize }} {{ singularHumanName }}') ?></legend>
                <?php
{% for field in fields if field not in primaryKey %}
    {%- if keyFields[field] %}
        {%- set fieldData = Bake.columnData(field, schema) %}
        {%- if fieldData.null %}
            echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}, 'empty' => true]);
                {{- "\n" }}
                {%- else %}
                    echo $this->Form->control('{{ field }}', ['options' => ${{ keyFields[field] }}]);
                    {{- "\n" }}
                {%- endif %}
                {%- elseif field not in ['created', 'modified', 'updated'] %}
                    {%- set fieldData = Bake.columnData(field, schema) %}
                    {%- if fieldData.type in ['date', 'datetime', 'time'] and fieldData.null %}
                        echo $this->Form->control('{{ field }}', ['empty' => true]);
                        {{- "\n" }}
                    {%- else %}
                        echo $this->Form->control('{{ field }}');
                        {{- "\n" }}
                    {%- endif %}
                {%- endif %}
                {%- endfor %}

                {%- if associations.BelongsToMany %}
                    {%- for assocName, assocData in associations.BelongsToMany %}
                        echo $this->Form->control('{{ assocData.property }}._ids', ['options' => ${{ assocData.variable }}]);
                        {{- "\n" }}
                    {%- endfor %}
                {% endif %}
                ?>
            </fieldset>
            <?= $this->Form->button(__('Submit'), ['class' => 'btn btn-primary']) ?>
            <?= $this->Form->end() ?>
        </div>
    </div>
</div>

